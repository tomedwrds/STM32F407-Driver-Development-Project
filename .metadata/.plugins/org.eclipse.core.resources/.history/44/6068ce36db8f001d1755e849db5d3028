/*
 * stm32f407xx.h
 *
 *  Created on: Jan 9, 2023
 *      Author: tomed
 */

#ifndef INC_STM32F407XX_H_
#define INC_STM32F407XX_H_

#include <stdint.h>

#define __vo volatile


/*
 *  base addresses of flash and SRAM memories
 */

#define FLASH_BASEADDR			0x08000000U
#define SRAM1_BASEADDR			0x20000000U
#define SRAM2_BASEADDR			0x2001C000U
#define ROM						0x1FFF0000U
#define SRAM					SRAM1_BASEADDR

/*
 * base addresses of bus domains
 */

#define PERIPH_BASEADDR			0x40000000U
#define APB1PERIPH_BASE_ADDR	PERIPH_BASEADDR
#define APB2PERIPH_BASE_ADDR	0x40010000U
#define AHB1PERIPH_BASE_ADDR	0x40020000U
#define AHB2PERIPH_BASE_ADDR	0x50000000U

/*
 * base addresses of peripheals attached to AHB1 bus
 */

#define GPIOA_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x0000)
#define GPIOB_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x0400)
#define GPIOC_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x0800)
#define GPIOD_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x0C00)
#define GPIOE_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x1000)
#define GPIOF_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x1400)
#define GPIOG_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x1800)
#define GPIOH_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x1C00)
#define GPIOI_BASEADDR			(AHB1PERIPH_BASE_ADDR + 0x2000)

/*
 * base addresses of peripheals attached to APB1 bus
 */

#define I2C1_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x5400)
#define I2C2_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x5800)
#define I2C3_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x5C00)

#define SPI2_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x3800)
#define SPI3_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x3C00)

#define USART2_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x4400)
#define USART3_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x4800)
#define UART4_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x4C00)
#define UART5_BASEADDR			(APB1PERIPH_BASE_ADDR + 0x5000)


/*
 * base addresses of peripheals attached to APB2 bus
 */
#define EXTI_BASEADDR			(APB2PERIPH_BASE_ADDR + 0x3C00)
#define SPI1_BASEADDR			(APB2PERIPH_BASE_ADDR + 0x3000)
#define SYSCFG_BASEADDR			(APB2PERIPH_BASE_ADDR + 0x3800)
#define USART1_BASEADDR			(APB2PERIPH_BASE_ADDR + 0x1000)
#define USART6_BASEADDR			(APB2PERIPH_BASE_ADDR + 0x1400)


/*
 * peripheal register defention structures
 * __vo is used as short hand for volatile. Values in register can change therefore are volatile
 */

//GPIO registers
typedef struct
{
	__vo uint32_t MODER;
	__vo uint32_t OTYPER;
	__vo uint32_t OSPEEDR;
	__vo uint32_t PUPDR;
	__vo uint32_t IDR;
	__vo uint32_t ODR;
	__vo uint32_t BSRR;
	__vo uint32_t LCKR;
	__vo uint32_t AFR[2];
}GPIO_RegDef_t;

typedef struct
{
	__vo uint32_t CR;               										Address offset: 0x00 */
	__vo uint32_t PLLCFGR;           										Address offset: 0x04 */
	__vo uint32_t CFGR;              										Address offset: 0x08 */
  __vo uint32_t CIR;              										Address offset: 0x0C */
  __vo uint32_t AHB1RSTR;      /*!< TODO,     										Address offset: 0x10 */
  __vo uint32_t AHB2RSTR;      /*!< TODO,     										Address offset: 0x14 */
  __vo uint32_t AHB3RSTR;      /*!< TODO,     										Address offset: 0x18 */
  uint32_t      RESERVED0;     /*!< Reserved, 0x1C                                                       */
  __vo uint32_t APB1RSTR;      /*!< TODO,     										Address offset: 0x20 */
  __vo uint32_t APB2RSTR;      /*!< TODO,     										Address offset: 0x24 */
  uint32_t      RESERVED1[2];  /*!< Reserved, 0x28-0x2C                                                  */
  __vo uint32_t AHB1ENR;       /*!< TODO,     										Address offset: 0x30 */
  __vo uint32_t AHB2ENR;       /*!< TODO,     										Address offset: 0x34 */
  __vo uint32_t AHB3ENR;       /*!< TODO,     										Address offset: 0x38 */
  uint32_t      RESERVED2;     /*!< Reserved, 0x3C                                                       */
  __vo uint32_t APB1ENR;       /*!< TODO,     										Address offset: 0x40 */
  __vo uint32_t APB2ENR;       /*!< TODO,     										Address offset: 0x44 */
  uint32_t      RESERVED3[2];  /*!< Reserved, 0x48-0x4C                                                  */
  __vo uint32_t AHB1LPENR;     /*!< TODO,     										Address offset: 0x50 */
  __vo uint32_t AHB2LPENR;     /*!< TODO,     										Address offset: 0x54 */
  __vo uint32_t AHB3LPENR;     /*!< TODO,     										Address offset: 0x58 */
  uint32_t      RESERVED4;     /*!< Reserved, 0x5C                                                       */
  __vo uint32_t APB1LPENR;     /*!< TODO,     										Address offset: 0x60 */
  __vo uint32_t APB2LPENR;     /*!< RTODO,     										Address offset: 0x64 */
  uint32_t      RESERVED5[2];  /*!< Reserved, 0x68-0x6C                                                  */
  __vo uint32_t BDCR;          /*!< TODO,     										Address offset: 0x70 */
  __vo uint32_t CSR;           /*!< TODO,     										Address offset: 0x74 */
  uint32_t      RESERVED6[2];  /*!< Reserved, 0x78-0x7C                                                  */
  __vo uint32_t SSCGR;         /*!< TODO,     										Address offset: 0x80 */
  __vo uint32_t PLLI2SCFGR;    /*!< TODO,     										Address offset: 0x84 */
  __vo uint32_t PLLSAICFGR;    /*!< TODO,     										Address offset: 0x88 */
  __vo uint32_t DCKCFGR;       /*!< TODO,     										Address offset: 0x8C */
  __vo uint32_t CKGATENR;      /*!< TODO,     										Address offset: 0x90 */
  __vo uint32_t DCKCFGR2;      /*!< TODO,     										Address offset: 0x94 */

} RCC_RegDef_t;




/*
 * peripheal defentions (Peripheal base addresses typed casted to xxx_regdef_t)
 * */

#define GPIOA 					((GPIO_RegDef_t*)GPIOA_BASE)
#define GPIOB 					((GPIO_RegDef_t*)GPIOB_BASE)
#define GPIOC 					((GPIO_RegDef_t*)GPIOC_BASE)
#define GPIOD 					((GPIO_RegDef_t*)GPIOD_BASE)
#define GPIOE 					((GPIO_RegDef_t*)GPIOE_BASE)
#define GPIOF 					((GPIO_RegDef_t*)GPIOF_BASE)
#define GPIOG 					((GPIO_RegDef_t*)GPIOG_BASE)
#define GPIOH 					((GPIO_RegDef_t*)GPIOH_BASE)
#define GPIOI 					((GPIO_RegDef_t*)GPIOI_BASE)






#endif /* INC_STM32F407XX_H_ */
