/*
 * stm32f407xx_gpio_driver.h
 *
 *  Created on: Jan 9, 2023
 *      Author: tomed
 */

#ifndef INC_STM32F407XX_SPI_DRIVER_H_
#define INC_STM32F407XX_SPI_DRIVER_H_

#include "stm32f407xx.h"

/*
 *  Configuration structure for SPIx peripheral
 */
typedef struct
{
	uint8_t SPI_DeviceMode;
	uint8_t SPI_BusConfig;
	uint8_t SPI_SclkSpeed;
	uint8_t SPI_DFF;
	uint8_t SPI_CPOL;
	uint8_t SPI_CPHA;
	uint8_t SPI_SSM;
}SPI_Config_t;


/*
 *Handle structure for SPIx peripheral
 */
typedef struct
{
	SPI_RegDef_t 	*pSPIx;
	SPI_Config_t 	SPIConfig;
//	uint8_t 		*pTxBuffer;
//	uint8_t 		*pRxBuffer;
//	uint32_t 		TxLen;
//	uint32_t 		RxLen;
//	uint8_t 		TxState;
//	uint8_t 		RxState;
}SPI_Handle_t;


/*
 * API function protoypes
 * */

//Peripheal clock setup
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t EnorDi);

//Init/Deinit
void SPI_Init(SPI_Handle_t *p);
void SPI_DeInit(SPI_RegDef_t *pSPIx);

//Data read write
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t value);
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);

//IRQ config and ISR handling
void GPIO_IRQConfig(uint8_t IRQ_Number, uint8_t EnorDi);
void GPIO_IRQPriorityConfig(uint8_t IRQ_Number, uint8_t IRQ_Priority);
void GPIO_IRQHandling(uint8_t PinNumber);




#endif /* INC_STM32F407XX_SPI_DRIVER_H_ */
