
Driver Development Project.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002dc  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000484  0800048c  0001048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000484  08000484  0001048c  2**0
                  CONTENTS
  4 .ARM          00000000  08000484  08000484  0001048c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000484  0800048c  0001048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000484  08000484  00010484  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000488  08000488  00010488  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001048c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001048c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0001048c  2**0
                  CONTENTS, READONLY
 13 .debug_line   00000b77  00000000  00000000  000104bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_info   00000740  00000000  00000000  00011033  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000239  00000000  00000000  00011773  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000078  00000000  00000000  000119b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    000077cc  00000000  00000000  00011a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_ranges 00000050  00000000  00000000  000191f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  0000018a  00000000  00000000  00019248  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  000193d2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000e4  00000000  00000000  00019424  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800046c 	.word	0x0800046c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800046c 	.word	0x0800046c

080001e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001e8:	480d      	ldr	r0, [pc, #52]	; (8000220 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001f0:	480c      	ldr	r0, [pc, #48]	; (8000224 <LoopForever+0x6>)
  ldr r1, =_edata
 80001f2:	490d      	ldr	r1, [pc, #52]	; (8000228 <LoopForever+0xa>)
  ldr r2, =_sidata
 80001f4:	4a0d      	ldr	r2, [pc, #52]	; (800022c <LoopForever+0xe>)
  movs r3, #0
 80001f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001f8:	e002      	b.n	8000200 <LoopCopyDataInit>

080001fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001fe:	3304      	adds	r3, #4

08000200 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000200:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000202:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000204:	d3f9      	bcc.n	80001fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000206:	4a0a      	ldr	r2, [pc, #40]	; (8000230 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000208:	4c0a      	ldr	r4, [pc, #40]	; (8000234 <LoopForever+0x16>)
  movs r3, #0
 800020a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800020c:	e001      	b.n	8000212 <LoopFillZerobss>

0800020e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800020e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000210:	3204      	adds	r2, #4

08000212 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000212:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000214:	d3fb      	bcc.n	800020e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000216:	f000 f905 	bl	8000424 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800021a:	f000 f8ed 	bl	80003f8 <main>

0800021e <LoopForever>:

LoopForever:
    b LoopForever
 800021e:	e7fe      	b.n	800021e <LoopForever>
  ldr   r0, =_estack
 8000220:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000224:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000228:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800022c:	0800048c 	.word	0x0800048c
  ldr r2, =_sbss
 8000230:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000234:	2000001c 	.word	0x2000001c

08000238 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000238:	e7fe      	b.n	8000238 <ADC_IRQHandler>
	...

0800023c <TIM_PeriClockControl>:
 *
 * @Note              - none
 *********************************************************************/

void TIM_PeriClockControl(TIM_RegDef_t *pTIMx, uint8_t EnorDi)
{
 800023c:	b480      	push	{r7}
 800023e:	b083      	sub	sp, #12
 8000240:	af00      	add	r7, sp, #0
 8000242:	6078      	str	r0, [r7, #4]
 8000244:	460b      	mov	r3, r1
 8000246:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000248:	78fb      	ldrb	r3, [r7, #3]
 800024a:	2b01      	cmp	r3, #1
 800024c:	f040 8099 	bne.w	8000382 <TIM_PeriClockControl+0x146>
	{
		if(pTIMx == TIM1)
 8000250:	687b      	ldr	r3, [r7, #4]
 8000252:	4a4f      	ldr	r2, [pc, #316]	; (8000390 <TIM_PeriClockControl+0x154>)
 8000254:	4293      	cmp	r3, r2
 8000256:	d106      	bne.n	8000266 <TIM_PeriClockControl+0x2a>
		{
			TIM1_PCLK_EN();
 8000258:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <TIM_PeriClockControl+0x158>)
 800025a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800025c:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <TIM_PeriClockControl+0x158>)
 800025e:	f043 0301 	orr.w	r3, r3, #1
 8000262:	6453      	str	r3, [r2, #68]	; 0x44
		}else if (pTIMx == TIM14)
		{
			TIM14_PCLK_EN();
		}
	}
}
 8000264:	e08d      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM2)
 8000266:	687b      	ldr	r3, [r7, #4]
 8000268:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800026c:	d106      	bne.n	800027c <TIM_PeriClockControl+0x40>
			TIM2_PCLK_EN();
 800026e:	4b49      	ldr	r3, [pc, #292]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000270:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000272:	4a48      	ldr	r2, [pc, #288]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000274:	f043 0301 	orr.w	r3, r3, #1
 8000278:	6413      	str	r3, [r2, #64]	; 0x40
}
 800027a:	e082      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM3)
 800027c:	687b      	ldr	r3, [r7, #4]
 800027e:	4a46      	ldr	r2, [pc, #280]	; (8000398 <TIM_PeriClockControl+0x15c>)
 8000280:	4293      	cmp	r3, r2
 8000282:	d106      	bne.n	8000292 <TIM_PeriClockControl+0x56>
			TIM3_PCLK_EN();
 8000284:	4b43      	ldr	r3, [pc, #268]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000286:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000288:	4a42      	ldr	r2, [pc, #264]	; (8000394 <TIM_PeriClockControl+0x158>)
 800028a:	f043 0302 	orr.w	r3, r3, #2
 800028e:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000290:	e077      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM4)
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	4a41      	ldr	r2, [pc, #260]	; (800039c <TIM_PeriClockControl+0x160>)
 8000296:	4293      	cmp	r3, r2
 8000298:	d106      	bne.n	80002a8 <TIM_PeriClockControl+0x6c>
			TIM4_PCLK_EN();
 800029a:	4b3e      	ldr	r3, [pc, #248]	; (8000394 <TIM_PeriClockControl+0x158>)
 800029c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800029e:	4a3d      	ldr	r2, [pc, #244]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002a0:	f043 0304 	orr.w	r3, r3, #4
 80002a4:	6413      	str	r3, [r2, #64]	; 0x40
}
 80002a6:	e06c      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM5)
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	4a3d      	ldr	r2, [pc, #244]	; (80003a0 <TIM_PeriClockControl+0x164>)
 80002ac:	4293      	cmp	r3, r2
 80002ae:	d106      	bne.n	80002be <TIM_PeriClockControl+0x82>
			TIM5_PCLK_EN();
 80002b0:	4b38      	ldr	r3, [pc, #224]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002b4:	4a37      	ldr	r2, [pc, #220]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002b6:	f043 0308 	orr.w	r3, r3, #8
 80002ba:	6413      	str	r3, [r2, #64]	; 0x40
}
 80002bc:	e061      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM6)
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4a38      	ldr	r2, [pc, #224]	; (80003a4 <TIM_PeriClockControl+0x168>)
 80002c2:	4293      	cmp	r3, r2
 80002c4:	d106      	bne.n	80002d4 <TIM_PeriClockControl+0x98>
			TIM6_PCLK_EN();
 80002c6:	4b33      	ldr	r3, [pc, #204]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002ca:	4a32      	ldr	r2, [pc, #200]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002cc:	f043 0310 	orr.w	r3, r3, #16
 80002d0:	6413      	str	r3, [r2, #64]	; 0x40
}
 80002d2:	e056      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM7)
 80002d4:	687b      	ldr	r3, [r7, #4]
 80002d6:	4a34      	ldr	r2, [pc, #208]	; (80003a8 <TIM_PeriClockControl+0x16c>)
 80002d8:	4293      	cmp	r3, r2
 80002da:	d106      	bne.n	80002ea <TIM_PeriClockControl+0xae>
			TIM7_PCLK_EN();
 80002dc:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80002e0:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002e2:	f043 0320 	orr.w	r3, r3, #32
 80002e6:	6413      	str	r3, [r2, #64]	; 0x40
}
 80002e8:	e04b      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM8)
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	4a2f      	ldr	r2, [pc, #188]	; (80003ac <TIM_PeriClockControl+0x170>)
 80002ee:	4293      	cmp	r3, r2
 80002f0:	d106      	bne.n	8000300 <TIM_PeriClockControl+0xc4>
			TIM8_PCLK_EN();
 80002f2:	4b28      	ldr	r3, [pc, #160]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002f6:	4a27      	ldr	r2, [pc, #156]	; (8000394 <TIM_PeriClockControl+0x158>)
 80002f8:	f043 0302 	orr.w	r3, r3, #2
 80002fc:	6453      	str	r3, [r2, #68]	; 0x44
}
 80002fe:	e040      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM9)
 8000300:	687b      	ldr	r3, [r7, #4]
 8000302:	4a2b      	ldr	r2, [pc, #172]	; (80003b0 <TIM_PeriClockControl+0x174>)
 8000304:	4293      	cmp	r3, r2
 8000306:	d106      	bne.n	8000316 <TIM_PeriClockControl+0xda>
			TIM9_PCLK_EN();
 8000308:	4b22      	ldr	r3, [pc, #136]	; (8000394 <TIM_PeriClockControl+0x158>)
 800030a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800030c:	4a21      	ldr	r2, [pc, #132]	; (8000394 <TIM_PeriClockControl+0x158>)
 800030e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000312:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000314:	e035      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM10)
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a26      	ldr	r2, [pc, #152]	; (80003b4 <TIM_PeriClockControl+0x178>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d106      	bne.n	800032c <TIM_PeriClockControl+0xf0>
			TIM10_PCLK_EN();
 800031e:	4b1d      	ldr	r3, [pc, #116]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000320:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000322:	4a1c      	ldr	r2, [pc, #112]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000324:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000328:	6453      	str	r3, [r2, #68]	; 0x44
}
 800032a:	e02a      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM11)
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	4a22      	ldr	r2, [pc, #136]	; (80003b8 <TIM_PeriClockControl+0x17c>)
 8000330:	4293      	cmp	r3, r2
 8000332:	d106      	bne.n	8000342 <TIM_PeriClockControl+0x106>
			TIM11_PCLK_EN();
 8000334:	4b17      	ldr	r3, [pc, #92]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000336:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000338:	4a16      	ldr	r2, [pc, #88]	; (8000394 <TIM_PeriClockControl+0x158>)
 800033a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800033e:	6453      	str	r3, [r2, #68]	; 0x44
}
 8000340:	e01f      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM12)
 8000342:	687b      	ldr	r3, [r7, #4]
 8000344:	4a1d      	ldr	r2, [pc, #116]	; (80003bc <TIM_PeriClockControl+0x180>)
 8000346:	4293      	cmp	r3, r2
 8000348:	d106      	bne.n	8000358 <TIM_PeriClockControl+0x11c>
			TIM12_PCLK_EN();
 800034a:	4b12      	ldr	r3, [pc, #72]	; (8000394 <TIM_PeriClockControl+0x158>)
 800034c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800034e:	4a11      	ldr	r2, [pc, #68]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000350:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000354:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000356:	e014      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM13)
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	4a19      	ldr	r2, [pc, #100]	; (80003c0 <TIM_PeriClockControl+0x184>)
 800035c:	4293      	cmp	r3, r2
 800035e:	d106      	bne.n	800036e <TIM_PeriClockControl+0x132>
			TIM13_PCLK_EN();
 8000360:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000362:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000364:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000366:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800036a:	6413      	str	r3, [r2, #64]	; 0x40
}
 800036c:	e009      	b.n	8000382 <TIM_PeriClockControl+0x146>
		}else if (pTIMx == TIM14)
 800036e:	687b      	ldr	r3, [r7, #4]
 8000370:	4a14      	ldr	r2, [pc, #80]	; (80003c4 <TIM_PeriClockControl+0x188>)
 8000372:	4293      	cmp	r3, r2
 8000374:	d105      	bne.n	8000382 <TIM_PeriClockControl+0x146>
			TIM14_PCLK_EN();
 8000376:	4b07      	ldr	r3, [pc, #28]	; (8000394 <TIM_PeriClockControl+0x158>)
 8000378:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800037a:	4a06      	ldr	r2, [pc, #24]	; (8000394 <TIM_PeriClockControl+0x158>)
 800037c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000380:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000382:	bf00      	nop
 8000384:	370c      	adds	r7, #12
 8000386:	46bd      	mov	sp, r7
 8000388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop
 8000390:	40010000 	.word	0x40010000
 8000394:	40023800 	.word	0x40023800
 8000398:	40000400 	.word	0x40000400
 800039c:	40000800 	.word	0x40000800
 80003a0:	40000c00 	.word	0x40000c00
 80003a4:	40001000 	.word	0x40001000
 80003a8:	40001400 	.word	0x40001400
 80003ac:	40010400 	.word	0x40010400
 80003b0:	40014000 	.word	0x40014000
 80003b4:	40014400 	.word	0x40014400
 80003b8:	40014800 	.word	0x40014800
 80003bc:	40001800 	.word	0x40001800
 80003c0:	40001c00 	.word	0x40001c00
 80003c4:	40002000 	.word	0x40002000

080003c8 <TIM_Init>:
 * @return            -  none
 *
 * @Note              - none
 *********************************************************************/
void TIM_Init(TIM_Handle_t *TIM_Handle_t)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b082      	sub	sp, #8
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	//Enable the clock
	TIM_PeriClockControl(TIM_Handle_t->pTIMx, ENABLE);
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	2101      	movs	r1, #1
 80003d6:	4618      	mov	r0, r3
 80003d8:	f7ff ff30 	bl	800023c <TIM_PeriClockControl>

	//Set the prescalar value
	TIM_Handle_t->pTIMx->PSC = TIM_Handle_t->TIM_Config_t.TIM_Prescalar;
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	889a      	ldrh	r2, [r3, #4]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	629a      	str	r2, [r3, #40]	; 0x28

	//Set the autoreload value
	TIM_Handle_t->pTIMx->ARR = TIM_Handle_t->TIM_Config_t.TIM_AutoReload;
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	88da      	ldrh	r2, [r3, #6]
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	62da      	str	r2, [r3, #44]	; 0x2c

}
 80003f0:	bf00      	nop
 80003f2:	3708      	adds	r7, #8
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bd80      	pop	{r7, pc}

080003f8 <main>:
 *      Author: tomed
 */
#include "stm32f407xx.h"

int main(void)
{
 80003f8:	b580      	push	{r7, lr}
 80003fa:	b082      	sub	sp, #8
 80003fc:	af00      	add	r7, sp, #0
	TIM_Handle_t timer;
	timer.pTIMx = TIM6;
 80003fe:	4b08      	ldr	r3, [pc, #32]	; (8000420 <main+0x28>)
 8000400:	603b      	str	r3, [r7, #0]
	//-1 nesscary as extra clock cycle is spent at Auto reload value
	timer.TIM_Config_t.TIM_AutoReload = 64000-1;
 8000402:	f64f 13ff 	movw	r3, #63999	; 0xf9ff
 8000406:	80fb      	strh	r3, [r7, #6]
	timer.TIM_Config_t.TIM_Prescalar = 24;
 8000408:	2318      	movs	r3, #24
 800040a:	80bb      	strh	r3, [r7, #4]
	TIM_Init(&timer);
 800040c:	463b      	mov	r3, r7
 800040e:	4618      	mov	r0, r3
 8000410:	f7ff ffda 	bl	80003c8 <TIM_Init>
 8000414:	2300      	movs	r3, #0
}
 8000416:	4618      	mov	r0, r3
 8000418:	3708      	adds	r7, #8
 800041a:	46bd      	mov	sp, r7
 800041c:	bd80      	pop	{r7, pc}
 800041e:	bf00      	nop
 8000420:	40001000 	.word	0x40001000

08000424 <__libc_init_array>:
 8000424:	b570      	push	{r4, r5, r6, lr}
 8000426:	4d0d      	ldr	r5, [pc, #52]	; (800045c <__libc_init_array+0x38>)
 8000428:	4c0d      	ldr	r4, [pc, #52]	; (8000460 <__libc_init_array+0x3c>)
 800042a:	1b64      	subs	r4, r4, r5
 800042c:	10a4      	asrs	r4, r4, #2
 800042e:	2600      	movs	r6, #0
 8000430:	42a6      	cmp	r6, r4
 8000432:	d109      	bne.n	8000448 <__libc_init_array+0x24>
 8000434:	4d0b      	ldr	r5, [pc, #44]	; (8000464 <__libc_init_array+0x40>)
 8000436:	4c0c      	ldr	r4, [pc, #48]	; (8000468 <__libc_init_array+0x44>)
 8000438:	f000 f818 	bl	800046c <_init>
 800043c:	1b64      	subs	r4, r4, r5
 800043e:	10a4      	asrs	r4, r4, #2
 8000440:	2600      	movs	r6, #0
 8000442:	42a6      	cmp	r6, r4
 8000444:	d105      	bne.n	8000452 <__libc_init_array+0x2e>
 8000446:	bd70      	pop	{r4, r5, r6, pc}
 8000448:	f855 3b04 	ldr.w	r3, [r5], #4
 800044c:	4798      	blx	r3
 800044e:	3601      	adds	r6, #1
 8000450:	e7ee      	b.n	8000430 <__libc_init_array+0xc>
 8000452:	f855 3b04 	ldr.w	r3, [r5], #4
 8000456:	4798      	blx	r3
 8000458:	3601      	adds	r6, #1
 800045a:	e7f2      	b.n	8000442 <__libc_init_array+0x1e>
 800045c:	08000484 	.word	0x08000484
 8000460:	08000484 	.word	0x08000484
 8000464:	08000484 	.word	0x08000484
 8000468:	08000488 	.word	0x08000488

0800046c <_init>:
 800046c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800046e:	bf00      	nop
 8000470:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000472:	bc08      	pop	{r3}
 8000474:	469e      	mov	lr, r3
 8000476:	4770      	bx	lr

08000478 <_fini>:
 8000478:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800047a:	bf00      	nop
 800047c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800047e:	bc08      	pop	{r3}
 8000480:	469e      	mov	lr, r3
 8000482:	4770      	bx	lr
